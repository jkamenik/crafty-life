// Generated by CoffeeScript 1.7.1
Crafty.c('CenterText', {
  init: function() {
    this.requires('2D, DOM, Text');
    return this.attr({
      x: Game.width / 2,
      y: Game.height / 2
    });
  }
});

Crafty.c('Cell', {
  aliveColor: 'purple',
  deadColor: 'pink',
  currAlive: false,
  lastAlive: false,
  cellX: 0,
  cellY: 0,
  init: function() {
    this.requires('2D, Canvas, Color');
    this.attr({
      w: Game.cellSize,
      h: Game.cellSize
    });
    return this.cell(Crafty.math.randomInt(0, 1));
  },
  cell: function(state) {
    this.currAlive = !!state;
    this.reRender();
    return this;
  },
  cellColor: function() {
    if (this.currAlive) {
      return this.aliveColor;
    } else {
      return this.deadColor;
    }
  },
  at: function(x, y) {
    this.cellX = x;
    this.cellY = y;
    return this.attr({
      x: x * Game.cellSize,
      y: y * Game.cellSize
    });
  },
  calcNextState: function() {
    var alive, neighbor, neighbors, _i, _len;
    neighbors = Game.neighborsOf(this.cellX, this.cellY);
    alive = 0;
    for (_i = 0, _len = neighbors.length; _i < _len; _i++) {
      neighbor = neighbors[_i];
      if (neighbor.lastAlive) {
        alive += 1;
      }
    }
    if (this.currAlive) {
      if (alive === 2 || alive === 3) {
        return this.currAlive = true;
      } else {
        return this.currAlive = false;
      }
    } else if (alive === 3) {
      return this.currAlive = true;
    }
  },
  reRender: function() {
    this.lastAlive = this.currAlive;
    return this.color(this.cellColor());
  }
});
